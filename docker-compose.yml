services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    networks:
      - micro_net
    depends_on:
      - api
    environment:
      VITE_API_URL: ${VITE_API_URL}
    volumes:
      - ./frontend:/app
      - /app/node_modules

  api:
    build: ./api
    ports:
      - "${API_PORT}:5000"
    networks:
      - micro_net
    depends_on:
      - db
      - logger
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      LOGGER_URL: ${LOGGER_URL}
      SERVICE_NAME: api
    volumes:
      - ./api:/app
      - /app/node_modules

  db:
    build:
      context: ./db
    image: local/task-db:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    networks:
      - micro_net
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  logger:
    build: ./logger
    ports:
      - "${LOGGER_PORT}:4000"
    networks:
      - micro_net
    environment:
      LOGGER_PORT: ${LOGGER_PORT}
    volumes:
      - ./logger:/app
      - /app/node_modules
      - ./logger/logs:/app/logs

networks:
  micro_net:

volumes:
  db_storage:
